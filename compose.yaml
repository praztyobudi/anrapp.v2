services:
  backend:
    container_name: anrapp-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    ports:
      - 8080:8080
    networks:
      - appnet
    volumes:
      - ./:/backend
  nginx:
    image: nginx:latest
    container_name: anrapp-nginx
    depends_on:
      - backend
    volumes:
      - ./nginx:/etc/nginx/conf.d:ro
      - ./nginx/default-site.conf:/etc/nginx/conf.d/default-site.conf:ro
    restart: unless-stopped
    ports:
      - 8800:80
    networks:
      - appnet
  pgdata:
    restart: unless-stopped
    container_name: anrapp-postgres
    image: postgres:17
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - appnet
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: anrapp-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    networks:
      - appnet
    depends_on:
      - pgdata
networks:
  appnet:
    driver: bridge
